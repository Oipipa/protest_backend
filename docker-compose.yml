services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      POSTGRES_DB: ${POSTGRES_DB:-app}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app} -d ${POSTGRES_DB:-app}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./api/app:/app/app
    ports:
      - "8000:8000"
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
      --reload

  worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      - redis
      - db
    env_file:
      - .env
    volumes:
      - ./api/app:/app/app
    command: >
      celery -A app.services.celery_app worker
      --pool solo
      --loglevel INFO

  beat:
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      - redis
      - db
    env_file:
      - .env
    volumes:
      - ./api/app:/app/app
    command: >
      celery -A app.services.celery_app beat
      --loglevel INFO

volumes:
  pgdata:
  redisdata:
